{"version":3,"sources":["redux/auth/selectors.js","router/PublicRoute.jsx","components/PageLoader/index.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crud/types.js","redux/crud/reducer.js","redux/search/types.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","app/index.jsx","hooks/useNetwork/index.jsx","serviceWorker.jsx","index.jsx","redux/auth/types.js","redux/storePersist.js","utils/history.jsx","config/serverApiConfig.js","request/codeMessage.js","request/errorHandler.js","request/successHandler.js","auth/auth.service.js","auth/cookie.js"],"names":["authSelect","state","auth","selectAuth","createSelector","current","isLoggedIn","PublicRoute","_ref","component","Component","rest","_jsx","Route","render","props","authService","get","Redirect","to","motion","div","initial","x","animate","exit","scale","children","PageLoader","className","Spin","size","Login","lazy","NotFound","AuthRouter","location","useLocation","Suspense","fallback","AnimatePresence","exitBeforeEnter","_jsxs","Switch","path","exact","pathname","PrivateRoute","config","type","damping","stiffness","transition","y","opacity","Home","Admin","Apartment","Reservation","Report","Logout","AppRouter","Sider","Layout","SubMenu","Menu","Navigation","_Fragment","style","zIndex","background","width","xmlns","height","viewBox","fill","d","stroke","defaultSelectedKeys","mode","borderRight","Item","Link","Router","useSelector","minHeight","INITIAL_STATE","loading","authReducer","arguments","length","undefined","action","actionTypes","payload","INITIAL_KEY_STATE","result","isLoading","isSuccess","list","items","pagination","pageSize","total","create","update","delete","read","search","crudReducer","keyState","INITIAL_REF_STATE","selected","searchReducer","newState","map","refKey","appReducer","combineReducers","crud","rootReducer","createLogger","middleware","thunk","configStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","storePersist","store","createStore","App","isOnline","isNetwork","setNetwork","useState","navigator","onLine","useEffect","useNetwork","RouterHistory","history","Provider","Result","status","title","subTitle","extra","Button","href","Boolean","hostname","match","console","log","process","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","set","key","localStorage","setItem","JSON","stringify","getItem","parse","remove","removeItem","getAll","clear","createBrowserHistory","REACT_APP_DEV_REMOTE","ACCESS_TOKEN_NAME","codeMessage","errorHandler","emptyResult","response","errorText","data","notification","duration","concat","description","jwtExpired","push","success","successHandler","url","login","async","axios","post","Date","getTime","loginAdminData","token","logout","cookieName","getCookie","cookieValue"],"mappings":"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","file":"static/js/main.47addda2.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\nconst authSelect = (state) => state.auth;\r\n\r\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\r\nexport const selectCurrentAdmin = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.current\r\n);\r\n\r\nexport const isLoggedIn = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.isLoggedIn\r\n);\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <motion.div\r\n            initial={{ x: 200 }}\r\n            animate={{ x: 0 }}\r\n            exit={{ scale: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst PageLoader = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\nexport default PageLoader;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\n\r\nconst Login = lazy(() =>\r\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\r\n);\r\n\r\nconst NotFound = lazy(() =>\r\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AuthRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PublicRoute\r\n            path=\"/\"\r\n            component={Login}\r\n            render={() => <Redirect to=\"/login\" />}\r\n          />\r\n          <PublicRoute component={Login} path=\"/login\" exact />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n            render={() => <Redirect to=\"/notfound\" />}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const config = {\r\n    type: \"spring\",\r\n    damping: 20,\r\n    stiffness: 100,\r\n  };\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <motion.div\r\n            transition={config}\r\n            initial={{ y: 20, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            exit={{ y: -20, opacity: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\n\r\nconst Home = lazy(() => \r\n  import(/*webpackChunkName: 'HomePage'*/ \"@/pages/Home\")\r\n);\r\n\r\nconst Admin = lazy(() =>\r\n  import(/*webpackChunkName:'AdminPage'*/ \"@/pages/Admin\")\r\n);\r\n\r\nconst Apartment = lazy(() =>\r\n  import(/*webpackChunkName:'ApartmentPage'*/ \"@/pages/Apartment\")\r\n);\r\n\r\nconst Reservation = lazy(() =>\r\n  import(/*webpackChunkName:'Reservation'*/ \"@/pages/Reservation\")\r\n);\r\n\r\nconst Report = lazy(() =>\r\n  import(/*webpackChunkName:'Report'*/ \"@/pages/Report\")\r\n);\r\n\r\nconst Logout = lazy(() =>\r\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\r\n);\r\nconst NotFound = lazy(() =>\r\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AppRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PrivateRoute component={Home} path=\"/\" exact />\r\n          <PrivateRoute component={Report} path=\"/reports\" exact />\r\n          <PrivateRoute component={Apartment} path=\"/apartments\" exact />\r\n          <PrivateRoute component={Admin} path=\"/managers\" exact />\r\n          <PrivateRoute component={Reservation} path=\"/reservations\" exact />\r\n\r\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\r\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n            render={() => <Redirect to=\"/notfound\" />}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n  \r\n  return (\r\n    <>\r\n      <Sider\r\n        style={{\r\n          zIndex: 1000,\r\n          background: 'white',\r\n          width: '190px'\r\n        }}\r\n      >\r\n        <div className=\"logo\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n            <path d=\"M15 15L11.2286 11.2286M11.2286 11.2286C12.3129 10.1443 12.9835 8.64635 12.9835 6.99177C12.9835 3.68261 10.3009 1 6.99177 1C3.68261 1 1 3.68261 1 6.99177C1 10.3009 3.68261 12.9835 6.99177 12.9835C8.64635 12.9835 10.1443 12.3129 11.2286 11.2286Z\" stroke=\"black\"/>\r\n          </svg>\r\n        </div>\r\n        <br/><br/>\r\n        <Menu \r\n          defaultSelectedKeys={[location.pathname]} \r\n          mode=\"inline\"\r\n          style={{\r\n            height: '100%',\r\n            borderRight: 0\r\n          }}\r\n        >\r\n          <Menu.Item key=\"/home\">\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/reports\">\r\n            <Link to=\"/reports\">Reports</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/apartments\">\r\n            <Link to=\"/apartments\">Apartments</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/managers\">\r\n            <Link to=\"/managers\">Managers</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"/reservations\">\r\n            <Link to=\"/reservations\" />\r\n            Reservations\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"hr133\"><hr /></Menu.Item>\r\n          \r\n          <Menu.Item key=\"/edit-site\">\r\n            <Link to=\"edit-site\" />\r\n            Edit the site\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    </>\r\n  );\r\n}\r\nexport default Navigation;\r\n","// export { default as AuthRouter } from \"./AuthRouter\";\r\n// export { default as AppRouter } from \"./AppRouter\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport Navigation from \"@/layout/Navigation\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAuth } from \"@/redux/auth/selectors\";\r\n\r\nexport default function Router() {\r\n  const { isLoggedIn } = useSelector(selectAuth);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"isLoggedIn : \", isLoggedIn);\r\n  // }, [isLoggedIn]);\r\n\r\n  if (isLoggedIn === false)\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <AuthRouter />\r\n      </Layout>\r\n    );\r\n  else\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Navigation />\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <AppRouter />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n// export default App;\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_STATE = {\r\n  current: {},\r\n  loading: false,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOADING_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.FAILED_REQUEST:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        current: action.payload,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n      };\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return INITIAL_STATE;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\r\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\r\n\r\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\r\n\r\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\r\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_KEY_STATE = {\r\n  result: null,\r\n  current: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  current: {\r\n    result: null,\r\n  },\r\n  list: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  create: INITIAL_KEY_STATE,\r\n  update: INITIAL_KEY_STATE,\r\n  delete: INITIAL_KEY_STATE,\r\n  read: INITIAL_KEY_STATE,\r\n  search: { ...INITIAL_KEY_STATE, result: [] },\r\n};\r\n\r\nconst crudReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload, keyState } = action;\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n    case actionTypes.CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          result: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: false,\r\n          isSuccess: false,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          result: payload,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n    case actionTypes.CURRENT_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_KEY_STATE,\r\n          current: payload,\r\n        },\r\n      };\r\n    case actionTypes.RESET_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_STATE[keyState],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default crudReducer;\r\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\r\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\r\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\r\n\r\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\r\n\r\nexport const RESET_REF = \"SEARCH_RESET_REF\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_REF_STATE = {\r\n  result: [],\r\n  selected: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\nconst INITIAL_STATE = {};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload = null, keyState = null } = action;\r\n  switch (action.type) {\r\n    case actionTypes.INIT_STATE: {\r\n      let newState = {};\r\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.RESET_REF:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n\r\n    case actionTypes.CURRENT_SELECTED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          selected: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          result: payload,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { reducer as authReducer } from \"./auth\";\r\nimport { reducer as crudReducer } from \"./crud\";\r\nimport { reducer as searchReducer } from \"./search\";\r\n\r\nimport * as actionTypes from \"./auth/types\";\r\n\r\n// Combine all reducers.\r\n\r\nconst appReducer = combineReducers({\r\n  auth: authReducer,\r\n  crud: crudReducer,\r\n  search: searchReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport storePersist from \"./storePersist\";\r\n\r\nconst logger = createLogger();\r\nlet middleware = [thunk];\r\n\r\nlet configStore = applyMiddleware(...middleware);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, logger];\r\n  configStore = composeEnhancers(applyMiddleware(...middleware));\r\n}\r\n\r\nconst initialState = storePersist.get(\"auth\")\r\n  ? { auth: storePersist.get(\"auth\") }\r\n  : {};\r\n\r\nconst store = createStore(rootReducer, initialState, configStore);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Router as RouterHistory } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Router from \"@/router\";\r\nimport history from \"@/utils/history\";\r\nimport store from \"@/redux/store\";\r\n\r\nimport { Button, Result } from \"antd\";\r\n\r\nimport useNetwork from \"@/hooks/useNetwork\";\r\n\r\nfunction App() {\r\n  const { isOnline: isNetwork } = useNetwork();\r\n\r\n  if (!isNetwork)\r\n    return (\r\n      <>\r\n        <Result\r\n          status=\"404\"\r\n          title=\"No Internet Connection\"\r\n          subTitle=\"Check your Internet Connection or your network.\"\r\n          extra={\r\n            <Button href=\"/\" type=\"primary\">\r\n              Try Again\r\n            </Button>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  else {\r\n    return (\r\n      <RouterHistory history={history}>\r\n        <Provider store={store}>\r\n          <Router />\r\n        </Provider>\r\n      </RouterHistory>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useNetwork() {\r\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\r\n  useEffect(() => {\r\n    setNetwork(window.navigator.onLine);\r\n  }, [window.navigator.onLine]);\r\n  return { isOnline };\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import \"./index.css\";\r\nimport App from \"./app\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./style/app.less\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nconsole.log(\"process env\", process.env.NODE_ENV)\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\r\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\r\n\r\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\r\n\r\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\r\n","export const storePersist = {\r\n  set: (key, state) => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  },\r\n  get: (key) => {\r\n    const result = window.localStorage.getItem(key);\r\n    return JSON.parse(result);\r\n  },\r\n  remove: (key) => {\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  getAll: () => {\r\n    return window.localStorage;\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  },\r\n};\r\n\r\nexport default storePersist;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","console.log(\r\n  \"process env REACT_APP_DEV_REMOTE\",\r\n  process.env.REACT_APP_DEV_REMOTE\r\n)\r\n\r\nexport const API_BASE_URL =\r\n  process.env.NODE_ENV == \"production\" ||\r\n  process.env.REACT_APP_DEV_REMOTE == \"remote\"\r\n    ? \"https://erp-crm.idurarapp.com/api/\"\r\n    : \"http://localhost:8888/api/\"\r\n\r\n// export const API_BASE_URL = \"https://wild-puce-reindeer-sari.cyclic.app/api/\";\r\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\"\r\n","const codeMessage = {\r\n  200: \"The server successfully returned the requested data. \",\r\n  201: \"Create or modify data successfully. \",\r\n  202: \"A request has entered the background queue (asynchronous task). \",\r\n  204: \"Delete data successfully. \",\r\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\r\n  401: \"The admin does not have permission please try to login again. \",\r\n  403: \"The admin is authorized, but access is forbidden. \",\r\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\r\n  406: \"The requested format is not available. \",\r\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\r\n  422: \"When creating an object, a validation error occurred. \",\r\n  500: \"An error occurred in the server, please check the server. \",\r\n  502: \"Gateway error. \",\r\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\r\n  504: \"The gateway has timed out. \",\r\n};\r\n\r\nexport default codeMessage;\r\n","import { notification } from \"antd\";\r\nimport history from \"@/utils/history\";\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst errorHandler = (error, emptyResult = null) => {\r\n  const { response } = error;\r\n\r\n  if (!response) {\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.error({\r\n    //   message: \"No internet connection\",\r\n    //   description: \"Cannot connect to the server, Check your internet network\",\r\n    // });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"Cannot connect to the server, Check your internet network\",\r\n    };\r\n  } else if (response && response.status) {\r\n    const message = response.data && response.data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n    if (error.response.data.jwtExpired) {\r\n      history.push(\"/logout\");\r\n    }\r\n    return response.data;\r\n  } else {\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: \"Unknown Error\",\r\n      description: \"An unknown error occurred in the app, please try again. \",\r\n    });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"An unknown error occurred in the app, please try again. \",\r\n    };\r\n  }\r\n};\r\n\r\nexport default errorHandler;\r\n","import { notification } from \"antd\";\r\n\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst successHandler = (response, typeNotification = {}) => {\r\n  if (!response.data.result) {\r\n    response = {\r\n      ...response,\r\n      status: 404,\r\n      url: null,\r\n      data: {\r\n        success: false,\r\n        result: null,\r\n      },\r\n    };\r\n  }\r\n  const { data } = response;\r\n  if (data.success === false) {\r\n    const message = data && data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n  } else {\r\n    const message = data && data.message;\r\n    const successText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.success({\r\n    //   message: `Request success`,\r\n    //   description: successText,\r\n    // });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport default successHandler;\r\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\n\r\nimport axios from \"axios\";\r\nimport errorHandler from \"@/request/errorHandler\";\r\nimport successHandler from \"@/request/successHandler\";\r\nimport storePersist from \"@/redux/storePersist\";\r\n\r\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\r\n\r\nexport const login = async (loginAdminData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\r\n      loginAdminData\r\n    );\r\n    token.set(response.data.result.token);\r\n    return successHandler(response);\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  token.remove();\r\n  storePersist.clear();\r\n};\r\n\r\nexport const token = {\r\n  get: () => {\r\n    return getCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n  set: (token) => {\r\n    return setCookie(ACCESS_TOKEN_NAME, token);\r\n  },\r\n  remove: () => {\r\n    return deleteCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n};\r\n","// export function getCookie(cookieName) {\r\n//   let name = cookieName + \"=\";\r\n//   let ca = document.cookie.split(\";\");\r\n//   for (let i = 0; i < ca.length; i++) {\r\n//     let c = ca[i];\r\n//     while (c.charAt(0)===\" \") {\r\n//       c = c.substring(1);\r\n//     }\r\n//     if (c.indexOf(name)===0) {\r\n//       return c.substring(name.length, c.length);\r\n//     }\r\n//   }\r\n//   return \"\";\r\n// }\r\n\r\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\r\n//   let d = new Date();\r\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n//   let expires = \"expires=\" + d.toUTCString();\r\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\r\n// }\r\n\r\n// export function deleteCookie(cookieName) {\r\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\r\n//   return true;\r\n// }\r\n\r\nexport function setCookie(cookieName, cookieValue) {\r\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\r\n}\r\nexport function getCookie(cookieName) {\r\n  const result = window.localStorage.getItem(cookieName);\r\n  \r\n  return result != undefined ?? JSON.parse(result);\r\n}\r\nexport function deleteCookie(cookieName) {\r\n  window.localStorage.removeItem(cookieName);\r\n  return true;\r\n}\r\n"],"sourceRoot":""}